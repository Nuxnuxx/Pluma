# To start all app containers and have them talking to each other, in the
# root folder /, run 'docker-compose up'.
# Refer to /README.md for more information.

# Docker Compose File Format Version.
version: "3.7"

services:

  mariadb:
    image: mariadb:latest
    container_name: my-mariadb
    restart: always
    env_file:
      - ../../bdd/env.mariadb
    ports:
      - 3306:3307
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - mariadb-network

  adminer:
    image: adminer:latest
    container_name: my-adminer
    restart: always
    ports:
      - 8080:8080

  ## Defining the Neo4j Database Service        
  neo:
    # The image to use
    image: neo4j:latest
    restart: always
    # map the ports so we can check the db server is up
    ports: 
      - 7474:7474
      - 7687:7687
    # mounting a named volume to the container to track db data
    volumes:
      - neo4j_data:/data/
    env_file:
      - ../../bdd/env.neo4j
    networks:
      - neo4j-network
  
  server:
    container_name: pluma-server
    build:
      context: ./server
    restart: always
    # Ne pas mettre de ports ici normalement
    #ports: 
      #- 5000:5000
    env_file: ./server/.env
    networks:
      - neo4j-network
      - mariadb-network
    
  client:
    container_name: pluma-client
    build:
      context: ./client
    # This will force server service to build and start before client.
    depends_on:
      - server
    restart: always
    ports:
      - 3000:3000
    environment:
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - neo4j-network
      - mariadb-network
    
volumes:
    neo4j_data:
    mariadb_data:
     
networks:
  neo4j-network:
    driver: bridge
  mariadb-network:
    driver: bridge
